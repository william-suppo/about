name: Run test on pull request.

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Use cache node dependencies
        uses: actions/cache@v2
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: Install node dependencies
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build assets
        run: npm run prod

      - name: Save assets in cache
        uses: actions/cache@v2
        id: assets-cache
        with:
          path: |
            public/mix-manifest.json
            public/css
            public/js
          key: ${{ runner.OS }}-build-assets

      - name: Set PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Use cache composer dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Install composer dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install --quiet --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Use cache composer dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Execute tests
        run: php vendor/bin/phpunit
    needs: build
